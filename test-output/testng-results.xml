<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="779512" started-at="2018-09-30T07:12:05Z" finished-at="2018-09-30T07:25:05Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="779512" started-at="2018-09-30T07:12:05Z" finished-at="2018-09-30T07:25:05Z">
      <class name="com.main.FlowEInvoice">
        <test-method status="PASS" signature="startReport()[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="startReport" is-config="true" duration-ms="4004" started-at="2018-09-30T07:12:05Z" finished-at="2018-09-30T07:12:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="Login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.main.FlowEInvoice@7a3d45bd]" name="Login" duration-ms="41541" started-at="2018-09-30T07:12:10Z" data-provider="Login" finished-at="2018-09-30T07:12:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[eInvoice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[shilki.jaiswal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[June@1811]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ZCS Production]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[GDQA-P2P@zycus.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-30T07:12:10Z" finished-at="2018-09-30T07:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.main.FlowEInvoice.Login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="getResult" is-config="true" duration-ms="2" started-at="2018-09-30T07:12:51Z" finished-at="2018-09-30T07:12:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=FlowEInvoice.Login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.main.FlowEInvoice@7a3d45bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-30T07:12:51Z" finished-at="2018-09-30T07:12:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.main.FlowEInvoice.Invoices(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Invoices(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.main.FlowEInvoice@7a3d45bd]" name="Invoices" duration-ms="460235" started-at="2018-09-30T07:12:51Z" data-provider="Invoices" depends-on-methods="com.main.FlowEInvoice.Login" finished-at="2018-09-30T07:20:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Draft]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invoice]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[04/05/2018]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[04/06/2018]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[04/05/2018]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[04/06/2050]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[100000]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[INR]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Without Reference]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[GDQA_SUPPLIER]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Invoices -->
        <test-method status="FAIL" signature="InvoiceNonPO(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.main.FlowEInvoice@7a3d45bd]" name="InvoiceNonPO" duration-ms="73" started-at="2018-09-30T07:20:32Z" data-provider="InvoiceNonPO" depends-on-methods="com.main.FlowEInvoice.Login" finished-at="2018-09-30T07:20:32Z">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: InvoiceNonPO([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=9, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) GDQA_SUPPLIER,(java.lang.String) NET30,(java.lang.String) INR,(java.lang.String) 19/06/2018,(java.lang.String) CMD-sanity,(java.lang.String) test,(java.lang.String) Materials testing,(java.lang.String) 32189,(java.lang.String) 1000,(java.lang.String) GLTYPE011,(java.lang.String) QMS]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: InvoiceNonPO([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=2, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=3, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=4, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=5, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=6, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=7, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=8, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=9, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) GDQA_SUPPLIER,(java.lang.String) NET30,(java.lang.String) INR,(java.lang.String) 19/06/2018,(java.lang.String) CMD-sanity,(java.lang.String) test,(java.lang.String) Materials testing,(java.lang.String) 32189,(java.lang.String) 1000,(java.lang.String) GLTYPE011,(java.lang.String) QMS]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:982)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvoiceNonPO -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-30T07:20:32Z" finished-at="2018-09-30T07:20:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Invoices status=SUCCESS method=FlowEInvoice.Invoices(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:2, instance:com.main.FlowEInvoice@7a3d45bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="InvoiceAction()[pri:4, instance:com.main.FlowEInvoice@7a3d45bd]" name="InvoiceAction" duration-ms="227922" started-at="2018-09-30T07:20:32Z" depends-on-methods="com.main.FlowEInvoice.Login" finished-at="2018-09-30T07:24:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvoiceAction -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-30T07:20:32Z" finished-at="2018-09-30T07:20:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.main.FlowEInvoice.InvoiceAction() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-09-30T07:24:20Z" finished-at="2018-09-30T07:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.main.FlowEInvoice.ApprovalAction() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ApprovalAction()[pri:5, instance:com.main.FlowEInvoice@7a3d45bd]" name="ApprovalAction" duration-ms="44857" started-at="2018-09-30T07:24:20Z" depends-on-methods="com.main.FlowEInvoice.Login" finished-at="2018-09-30T07:25:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApprovalAction -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-30T07:24:20Z" finished-at="2018-09-30T07:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvoiceAction status=SUCCESS method=FlowEInvoice.InvoiceAction()[pri:4, instance:com.main.FlowEInvoice@7a3d45bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="tearDown" is-config="true" duration-ms="203" started-at="2018-09-30T07:25:04Z" finished-at="2018-09-30T07:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.main.FlowEInvoice@7a3d45bd]" name="getResult" is-config="true" duration-ms="0" started-at="2018-09-30T07:25:04Z" finished-at="2018-09-30T07:25:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ApprovalAction status=SUCCESS method=FlowEInvoice.ApprovalAction()[pri:5, instance:com.main.FlowEInvoice@7a3d45bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- com.main.FlowEInvoice -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
