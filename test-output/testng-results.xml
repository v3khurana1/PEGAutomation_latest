<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="114650" started-at="2018-10-01T13:30:25Z" finished-at="2018-10-01T13:32:20Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="114650" started-at="2018-10-01T13:30:25Z" finished-at="2018-10-01T13:32:20Z">
      <class name="com.main.FlowEInvoice">
        <test-method status="PASS" signature="startReport()[pri:0, instance:com.main.FlowEInvoice@2002fc1d]" name="startReport" is-config="true" duration-ms="3813" started-at="2018-10-01T13:30:25Z" finished-at="2018-10-01T13:30:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="Login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.main.FlowEInvoice@2002fc1d]" name="Login" duration-ms="61737" started-at="2018-10-01T13:30:29Z" data-provider="Login" finished-at="2018-10-01T13:31:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[eInvoice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[shilki.jaiswal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[June@1811]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ZCS Production]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[GDQA-P2P@zycus.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.main.FlowEInvoice@2002fc1d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-10-01T13:30:29Z" finished-at="2018-10-01T13:30:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.main.FlowEInvoice.Login(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.main.FlowEInvoice@2002fc1d]" name="getResult" is-config="true" duration-ms="7" started-at="2018-10-01T13:31:31Z" finished-at="2018-10-01T13:31:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Login status=SUCCESS method=FlowEInvoice.Login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.main.FlowEInvoice@2002fc1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="InvoiceNonPO(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:3, instance:com.main.FlowEInvoice@2002fc1d]" name="InvoiceNonPO" duration-ms="44714" started-at="2018-10-01T13:31:31Z" data-provider="InvoiceNonPO" depends-on-methods="com.main.FlowEInvoice.Login" finished-at="2018-10-01T13:32:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GDQA_SUPPLIER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NET30]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INR]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[19/06/2018]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[PROD]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Materials testing]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[32189]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1000]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[GLTYPE011]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[QMS]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[[Ljava.lang.String;@5cf3157b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvoiceNonPO -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.main.FlowEInvoice@2002fc1d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-10-01T13:31:31Z" finished-at="2018-10-01T13:31:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.main.FlowEInvoice.InvoiceNonPO(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.main.FlowEInvoice@2002fc1d]" name="getResult" is-config="true" duration-ms="0" started-at="2018-10-01T13:32:16Z" finished-at="2018-10-01T13:32:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvoiceNonPO status=SUCCESS method=FlowEInvoice.InvoiceNonPO(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, [Ljava.lang.String;)[pri:3, instance:com.main.FlowEInvoice@2002fc1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.main.FlowEInvoice@2002fc1d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-10-01T13:32:16Z" finished-at="2018-10-01T13:32:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.main.FlowEInvoice.InvoiceAction(java.lang.String[]) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="InvoiceAction([Ljava.lang.String;)[pri:4, instance:com.main.FlowEInvoice@2002fc1d]" name="InvoiceAction" duration-ms="3437" started-at="2018-10-01T13:32:16Z" data-provider="Invoices" depends-on-methods="com.main.FlowEInvoice.Login" finished-at="2018-10-01T13:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@3e3315d9]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
at common.Functions.eInvoice_CommonFunctions.navigate_Rainbowpath(eInvoice_CommonFunctions.java:221)
at common.Functions.eInvoice_CommonFunctions.navigateToMainPage(eInvoice_CommonFunctions.java:144)
at common.Functions.eInvoice_CommonFunctions.navigateToMainPage(eInvoice_CommonFunctions.java:153)
at com.main.FlowEInvoice.InvoiceAction(FlowEInvoice.java:202)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvoiceAction -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.main.FlowEInvoice@2002fc1d]" name="getResult" is-config="true" duration-ms="0" started-at="2018-10-01T13:32:19Z" finished-at="2018-10-01T13:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=InvoiceAction status=FAILURE method=FlowEInvoice.InvoiceAction([Ljava.lang.String;)[pri:4, instance:com.main.FlowEInvoice@2002fc1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.main.FlowEInvoice@2002fc1d]" name="tearDown" is-config="true" duration-ms="179" started-at="2018-10-01T13:32:19Z" finished-at="2018-10-01T13:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.main.FlowEInvoice -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
